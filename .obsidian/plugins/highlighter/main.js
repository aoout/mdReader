/** GENERATED BY OBSIDIAN-PLUGIN-CLI, DO NOT EDIT */
var D=Object.create;var y=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,L=Object.prototype.hasOwnProperty;var S=h=>y(h,"__esModule",{value:!0});var j=(h,t)=>{S(h);for(var i in t)y(h,i,{get:t[i],enumerable:!0})},I=(h,t,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of V(t))!L.call(h,e)&&e!=="default"&&y(h,e,{get:()=>t[e],enumerable:!(i=O(t,e))||i.enumerable});return h},u=h=>I(S(y(h!=null?D(K(h)):{},"default",h&&h.__esModule&&"default"in h?{get:()=>h.default,enumerable:!0}:{value:h,enumerable:!0})),h);j(exports,{default:()=>P});var b=u(require("obsidian"));var M={boxTags:["HighlightBox"],boxType:"MOC",template:"{{highlight}}",popupType:"default",storage:"highlights",autoUpdate:!1};var H=u(require("obsidian"));function x(h,t){let i=[],e=/==(.+)==/g,s=null;for(;(s=e.exec(h))!==null;)i.push({content:s[1],sourcePath:t});return i}var m=u(require("path"));var l=class{static highlights2map(t){let i=new Map;return t.forEach(e=>{let{sourcePath:s,content:n}=e,o=s.split("/").splice(-1)[0].split(".md")[0],a=i.get(o);a?a.push({content:n,Comment:""}):i.set(o,[{content:n,Comment:""}])}),i}static map2markdown(t,i){let e="";return t.forEach((s,n)=>{e+=`## ${n}

`,s.forEach(o=>{e+=i.replace("{{highlight}}",o.content),e+=`
`,o.comment&&(e+=`@
${o.comment}
`),e+=`
`})}),e}static markdown2map(t,i){let e=new Map;return t.split("## ").splice(1).forEach(n=>{let o=n.split(`
`)[0],a=n.split(`

`).splice(1).filter(c=>c),g=[];a.forEach(c=>{let v=c.split(`
`)[0].replaceAll(new RegExp(`${i.replaceAll(/[.*+?^${}()|[\]\\]/g,"\\$&").replaceAll(/\\{\\{highlight\\}\\}/g,"(.*)")}`,"g"),"$1"),w=c.split(v).splice(1).join(`
`).split(`@
`)[1];g.push({content:v,comment:w})}),e.set(o,g)}),e}static mergeComments(t,i){return new Map(Array.from(i.entries()).map(e=>[e[0],e[1].map(s=>({content:s.content,comment:t.get(e[0])?.find(n=>n.content==s.content)?.comment||""}))]))}};var r=class{constructor(t,i,e){this.app=t,this.settings=i,this.path=e}static type(t){if(t=="MOC")return T;if(t=="Folder")return f;throw new Error("Invalid type")}static tagCheck(t,i,e){return(t.metadataCache.getCache(i)?.frontmatter?.tags||[]).some(n=>e.includes(n))}async getHighlights(){let t=this.getNotes();return(await Promise.all(t.map(async e=>{let s=await this.app.vault.read(e);return x(s,e.path)}))).flat()}getNotes(){throw new Error("Method not implemented.")}getHighlightsNotePath(){throw new Error("Method not implemented.")}async updateHighlightsNote(t){let i=await this.getHighlights(),e=l.highlights2map(i),s=this.getHighlightsNotePath(),n=this.app.vault.getAbstractFileByPath(s);if(!(n instanceof H.TFile))await this.app.vault.create(s,l.map2markdown(e,t));else{let o=await this.app.vault.read(n),a=l.markdown2map(o,t),g=l.mergeComments(a,e);await this.app.vault.modify(n,l.map2markdown(g,t))}}},T=class extends r{static findBox(t,i,e){let s=t.vault.getAbstractFileByPath(i);if(!s||!(s instanceof H.TFile))return;let n=t.metadataCache.getBacklinksForFile(s),o=Object.keys(n.data).find(a=>this.tagCheck(t,a,e.boxTags));return new T(t,e,o)}getNotes(){return this.app.metadataCache.getCache(this.path).links.map(i=>{let e=this.app.vault.getAbstractFileByPath(i.link+".md");if(!!e)return e})}getHighlightsNotePath(){return m.dirname(this.path)+"/"+this.settings.storage+".md"}},f=class extends r{static findBox(t,i,e){let s=m.dirname(i),n=s+"/"+m.basename(s)+".md";if(this.tagCheck(t,n,e.boxTags))return new f(t,e,n);if(s!=".")return f.findBox(t,s,e)}getNotes(){let t=m.dirname(this.path);return this.app.vault.getMarkdownFiles().filter(e=>e.path.split("/").includes(t))}};var A=u(require("obsidian")),E=class extends A.SuggestModal{constructor(t,i,e){super(t);this.emptyStateText="No highlight files found.";this.highlighters=i,this.choosed=e}getSuggestions(t){return this.highlighters.filter(i=>i.content.includes(t))}renderSuggestion(t,i){i.createEl("div",{text:t.sourcePath}),i.createEl("small",{text:t.content})}onChooseSuggestion(t,i){this.choosed(t)}};var p=u(require("obsidian")),C=class extends p.PluginSettingTab{constructor(t,i){super(t,i);this.plugin=i}display(){let{containerEl:t}=this;t.empty(),new p.Setting(t).setName("Tags").setDesc("The tags that will be added to the imported books.").addText(i=>i.setPlaceholder("HighlighterBox").setValue(this.plugin.settings.boxTags.join(", ")).onChange(async e=>{this.plugin.settings.boxTags=e.split(",").map(s=>s.trim()),await this.plugin.saveSettings()})),new p.Setting(t).setName("HighlighterBox Type").setDesc("The type of the HighlighterBox that will be used.").addDropdown(i=>i.addOptions({Folder:"Folder",MOC:"MOC"}).setValue(this.plugin.settings.boxType).onChange(async e=>{this.plugin.settings.boxType=e,await this.plugin.saveSettings()})),new p.Setting(t).setName("Template").setDesc("Change the way highlights are displayed.").addTextArea(i=>i.setValue(this.plugin.settings.template).onChange(async e=>{this.plugin.settings.template=e,await this.plugin.saveSettings()})),new p.Setting(t).setName("popup type").setDesc("Use different types of popups.").addDropdown(i=>i.addOptions({default:"default","always type1":"always type1","always type2":"always type2"}).setValue(this.plugin.settings.popupType).onChange(async e=>{this.plugin.settings.popupType=e,await this.plugin.saveSettings()})),new p.Setting(t).setName("Highlights Storage").setDesc("The name of the note where the highlights are stored.").addText(i=>i.setPlaceholder("highlights").setValue(this.plugin.settings.storage).onChange(async e=>{this.plugin.settings.storage=e,await this.plugin.saveSettings()})),new p.Setting(t).setName("auto update highlights file").setDesc("Auto update highlights file.").addToggle(i=>{i.setValue(this.plugin.settings.autoUpdate).onChange(async e=>{this.plugin.settings.autoUpdate=e,await this.plugin.saveSettings()})})}};var B=u(require("path"));var d=u(require("obsidian"));var F=u(require("path")),k=class{constructor(t,i){this.cursorClientX=0;this.cursorClientY=0;this.popoverShown=!1;this.saveMousePosition=t=>{this.cursorClientX=t.clientX,this.cursorClientY=t.clientY};this.handlePopoverEvents=async(t,i)=>{let e=this.plugin.app.workspace.getActiveViewOfType(d.MarkdownView).getMode();this.plugin.settings.popupType=="always type1"||e=="source"&&this.plugin.settings.popupType!="always type2"?this.showPopupType1(t):this.showPopupType2(t,i)};this.showPopupType1=async t=>{if(t.ctrlKey||t.metaKey){let i=this.plugin.app.workspace.getActiveViewOfType(d.MarkdownView);if(!i)return;let e=t.currentTarget,s=this.plugin.app.workspace.getActiveFile(),n=r.type(this.plugin.settings.boxType).findBox(this.plugin.app,s.path,this.plugin.settings),a=F.default.dirname(n.path)+"/"+this.plugin.settings.storage+".md";this.plugin.app.workspace.trigger("hover-link",{event:t,source:"highlighter",hoverParent:i.containerEl,targetEl:e,linktext:a,sourcePath:a});let g=e.firstChild?.textContent,c=await this.plugin.getCommentByContent(g);this.plugin.registerEvent(this.plugin.app.workspace.on("active-leaf-change",()=>{c!="Not any comment yet"?this.plugin.jumpToContent(c):this.plugin.jumpToContent(g)}))}};this.showPopupType2=async(t,i)=>{if(t.ctrlKey||t.metaKey){let e=this.plugin.app.workspace.getActiveViewOfType(d.MarkdownView);if(!e)return;let s=t.currentTarget;if(i){if(this.popoverShown)return;let n=new d.HoverPopover(e,s,null);n.onload=()=>this.popoverShown=!0,n.onunload=()=>this.popoverShown=!1,n.hoverEl.innerHTML=`<div class="markdown-embed is-loaded" style="height: revert">
					<div class="markdown-embed-content">
						<div class="markdown-preview-view markdown-rendered node-insert-event show-indentation-guide allow-fold-headings allow-fold-lists">
							<div class="markdown-preview-sizer markdown-preview-section">
								<p>${await this.textGetter(s.firstChild?.textContent)}</p>
							</div>
						</div>
					</div>
				</div>`}else e.hoverPopover=null}};this.onKeyChange=t=>{if(t.key==="Control"){let i=t.type==="keydown",e=document.querySelectorAll("[class='cm-highlight']").values(),s=document.querySelectorAll("mark").values();if([...e,...s].forEach(n=>{i?(n.addEventListener("mouseover",o=>this.handlePopoverEvents(o,!0)),n.addEventListener("mousemove",o=>this.handlePopoverEvents(o,!0)),n.addEventListener("mouseleave",o=>this.handlePopoverEvents(o,!1))):(n.removeEventListener("mouseover",o=>this.handlePopoverEvents(o,!0)),n.removeEventListener("mousemove",o=>this.handlePopoverEvents(o,!0)),n.removeEventListener("mouseleave",o=>this.handlePopoverEvents(o,!1)))}),i){let n=document.querySelectorAll(":hover"),o=n[n.length-1];o&&setTimeout(()=>{o.dispatchEvent(new MouseEvent("mousemove",{bubbles:!0,cancelable:!0,ctrlKey:!0,metaKey:!0,clientX:this.cursorClientX,clientY:this.cursorClientY,view:window}))},50)}}};this.plugin=t,this.textGetter=i,this.init()}init(){this.plugin.registerDomEvent(document,"mousemove",this.saveMousePosition),this.plugin.registerDomEvent(document,"keydown",this.onKeyChange),this.plugin.registerDomEvent(document,"keyup",this.onKeyChange)}};var P=class extends b.Plugin{constructor(){super(...arguments);this.getCommentByContent=async t=>{let i=this.app.workspace.getActiveFile();if(!i)return null;let e=r.type(this.settings.boxType).findBox(this.app,i.path,this.settings);if(!e)return"It is not in a box";let n=B.default.dirname(e.path)+"/"+this.settings.storage+".md",o=this.app.vault.getAbstractFileByPath(n),a=await this.app.vault.read(o),g=l.markdown2map(a,this.settings.template);for(let[c,v]of g.entries()){let w=v.find(N=>N.content===t);if(w)return w.comment||"Not any comment yet"}return"Not any comment yet"}}async onload(){console.log("Plugin Highlighter loaded."),await this.loadSettings(),this.addSettingTab(new C(this.app,this)),this.addCommand({id:"search-highlights-in-current-note",name:"Search highlights in current note",checkCallback:i=>{let e=this.app.workspace.getActiveFile();return e?(i||this.app.vault.cachedRead(e).then(s=>{let n=x(s,e.path);new E(this.app,n,o=>{this.jumpToHighlight(o)}).open()}),!0):!1}}),this.addCommand({id:"search-highlights-in-current-HighlightBox",name:"Search highlights in current HighlightBox",checkCallback:i=>{let e=this.app.workspace.getActiveFile();if(!e)return!1;let s=r.type(this.settings.boxType).findBox(this.app,e.path,this.settings);return s?(i||s.getHighlights().then(n=>{new E(this.app,n,o=>{this.jumpToHighlight(o)}).open()}),!0):!1}}),this.addCommand({id:"update-highlights-file",name:"Update highlights file",checkCallback:i=>{let e=this.app.workspace.getActiveFile();if(!e)return!1;let s=r.type(this.settings.boxType).findBox(this.app,e.path,this.settings);return s?(i||s.updateHighlightsNote(this.settings.template),!0):!1}}),this.registerEvent(this.app.workspace.on("editor-change",async(i,e)=>{!this.settings.autoUpdate||!r.type(this.settings.boxType).findBox(this.app,e.file.path,this.settings)||(await e.save(),this.app.commands.executeCommandById("highlighter:update-highlights-file"))}));let t=new k(this,this.getCommentByContent)}async loadSettings(){this.settings=Object.assign({},M,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}jumpToHighlight(t){let i=this.app.workspace.getActiveFile();if(!!i)if(i.path!=t.sourcePath){let e=this.app.vault.getAbstractFileByPath(t.sourcePath);if(!e||!(e instanceof b.TFile))return;this.app.workspace.getLeaf().openFile(e).then(()=>{this.jumpToContent(t.content)})}else this.jumpToContent(t.content)}jumpToContent(t){let i=this.app.workspace.getActiveFile();!i||this.app.vault.cachedRead(i).then(e=>{let s=this.app.workspace.activeEditor.editor,n=e.indexOf(t),o=n+t.length,a={from:s.offsetToPos(n),to:s.offsetToPos(o)};s.scrollIntoView(a,!0)})}};0&&(module.exports={});
